<!-- This file is purely for local development and shouldn't be used in production!! -->
<!-- Note: Don't auto-prettify this file.  It messed up old versions of IE -->
<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="utf-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Quiq Webchat</title>
  <style>
    button.noAgentsAvailable {
      opacity: .25;
      cursor: not-allowed;
      color: darkgrey;
    }
  </style>
  <!-- jQuery -->
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>

  <!-- Latest compiled and minified CSS -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u"
    crossorigin="anonymous">

  <!-- Optional theme -->
  <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap-theme.min.css" integrity="sha384-rHyoN1iRsVXV4nD0JutlnGaslCJuC7uwjduW9SVrLvRYooPp2bWYgmgJQIXwl/Sp"
    crossorigin="anonymous">

  <!-- Latest compiled and minified JavaScript -->
  <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa"
    crossorigin="anonymous">
    </script>

  <!-- Include webchat SDK -->
  <script src="<%= host %>/app/webchat/sdk.js"></script>

  <!-- Playground -->
  <script type="text/javascript" charset="utf-8">
    var quiqOptions = {
      displayMode: 'either',  // either | undocked | docked
      _internal: {
        captureRequests: false,
        captureWebsockets: false,
        exposeDraftJsFunctions: false,
      },
      //customLaunchButtons: ['#customLaunchBtn1'],
      //showDefaultLaunchButton: true,
      excludeEmojis: [],
      //includeEmojis: [],            // Set to `[]` to disable emojis
      agentsAvailableTimer: 60000,
      enforceAgentAvailability: true,
      customScreens: {
        waitScreen: {
          url: 'https://<%- tenant %>.quiq.dev:3001/testExtension',
          minHeight: 300,
        }
      },
      icons: {
        favicon: 'https://code.sololearn.com/Images/favicon-192x192.png',
        appleTouchIcon: "http://www.ondeck.com/wp-content/uploads/2017/09/OnDeck-Team_avatar_1505851846-192x192.png",
      },
      host: '<%- host %>',
      contactPoint: 'default',
      autoPopTime: 120000,
      mobileNumber: 33,
      messages: {
        pageTitle: 'Super Duper Quiq Chat',
        titleText: 'Quiq Webchat',
        emojiPicker: {
          categories: {
            people: 'La Gente',
          },
          notfound: 'No tenemos los emojis',
        },
        inactiveMessage: 'This message is no longer in the product. Keep this here to verify we don\'t blow up',
      },
      colors: {
        primary: '#31bf8b', // (Falls back to `QUIQ.COLOR`)
        menuText: '#2199e8',
        eventText: '#888',
        agentMessageText: '#555',
        agentMessageLinkText: '#2199e8',
        agentMessageBackground: '#e0e0e0',
        customerMessageText: 'yellow',
        customerMessageLinkText: 'yellow',
        customerMessageBackground: '#2199e8',
        transcriptBackground: '#f4f4f8',
        attachmentMessageColor: '#9c9c9f',
        browserTheme: '#ff3ffc',
      },
      anchorElement: '',
      fontFamily: 'Raleway',
      defaultAgentAvatar: 'https://static.quiq-cdn.com/quiq/favicon/apple-touch-icon-152x152.png',
      defaultCustomerAvatar: 'https://static.quiq-cdn.com/images/avatar-outline.png',
      styles: {
        HeaderMenu: {
          background: '#31bf8b',
        },
        /*
        AgentAvatar: {
          backgroundImage: "url('https://static.quiq-cdn.com/quiq/favicon/apple-touch-icon-152x152.png')",
          backgroundRepeat: "no-repeat",
          backgroundSize: "contain",
          display: "block",
          height: "30px",
          width: 30,
          marginRight: '5px',
        },
        CustomerAvatar: {
          backgroundImage: "url('https://static.quiq-cdn.com/images/avatar-outline.png')",
          backgroundRepeat: "no-repeat",
          backgroundSize: "contain",
          display: "block",
          height: "30px",
          borderRadius: '100%',
          backgroundColor: 'white',
          border: '1px dashed #2199e8',
          width: 30,
          marginLeft: '5px',
        },
        */
        HeaderBanner: {
          background: '#31bf8b',
          fontFamily: 'Source Sans Pro',
          fontSize: 16,
          fontWeight: 500,
          textTransform: 'uppercase',
        },
        ToggleChatButton: {
          background: 'teal',
        },
        ToggleChatButtonIcon: {
          opacity: 0.75,
        },
        CustomerMessageBubble: {
          background: '#68b588',
        },
        CustomerMessageText: {
          color: '#fff',
          fontFamily: 'Source Sans Pro',
        },
        AgentMessageBubble: {
          background: '#fff',
          border: '1px solid #e0e0e0',
        },
        AgentMessageText: {
          color: '#555',
          fontFamily: 'Source Sans Pro',
        },
        MessageForm: {
          boxShadow: '0 1px 2px 0 rgba(0, 0, 0, 0.2)',
          zIndex: 1,
        },
        MessageFormInput: {
          color: '#68b588',
          fontFamily: 'Source Sans Pro',
        },
        MessageFormSend: {
          color: '#68b588',
          textTransform: 'uppercase',
          fontFamily: 'Source Sans Pro',
          fontSize: 16,
          marginTop: '2px',
        },
        WelcomeFormField: {
          marginTop: 16,
        },
        WelcomeFormFieldLabel: {
          color: '#555',
          fontWeight: 700,
          textTransform: 'uppercase',
          fontFamily: 'Source Sans Pro',
        },
        WelcomeFormFieldInput: {
          outline: 'none',
          color: '#555',
          fontFamily: 'Source Sans Pro',
        },
        WelcomeFormFieldSelect: {
          outline: 'none',
          color: '#666',
          fontFamily: 'Source Sans Pro',
        },
        WelcomeFormFieldOption: {
          outline: 'none',
          color: '#777',
          fontFamily: 'Source Sans Pro',
        },
        WelcomeFormFieldTextarea: {
          outline: 'none',
          color: '#888',
          fontFamily: 'Source Sans Pro',
        },
        WelcomeFormSubmitButton: {
          background: 'teal',
          fontWeight: 700,
          fontFamily: 'Source Sans Pro',
          fontSize: 16,
        }
      },
      welcomeForm: {
        headerText: 'This should never be used since we use AdminUI now. Don\'t delete this though.',
        fields: [
          {
            type: 'text',
            label: 'First Name',
            id: 'firstName',
            required: true,
          },
        ],
      },
    };
    // Playground
    var state = {};

    // Initialize chat
    var chat = Quiq(quiqOptions);

    // Add event listeners
    chat.on('chatVisibilityDidChange', function (data) {
      updateState({ 'Chat is visible': data.visible });
    });

    // State table methods
    function updateState(data) {
      Object.keys(data).forEach(function (k) {
        state[k] = data[k];
      });
      updateStateTable();
    }

    function updateStateTable() {
      var rows = '';
      $.each(state, function (property, value) {
        var row = '<tr>';
        row += '<td>' + property + '</td>';
        row += '<td>' + value + '</td>';
        rows += row + '<tr>';
      });
      $('#stateTable')
        .children('tbody')
        .html(rows);
    }

    // SDK method wrappers
    function toggleChatVisibility(visible) {
      chat.setChatVisibility(visible);
    }

    function setChatRegistrationField() {
      var fieldId = document.getElementById('field_id').value;
      var fieldValue = document.getElementById('field_value').value;

      chat.setChatRegistrationField(fieldId, fieldValue);
    }

    function getAgentAvailability() {
      chat.getAgentAvailability(function (availability) {
        console.log(availability);
        document.getElementById('agentAvailabilityDiv').innerText = availability.available;
      });
    }

    function getHandle() {
      chat.getHandle(function (handle) {
        console.log(handle);
        document.getElementById('handleDiv').innerText = handle.handle;
      })
    }

    function getChatStatus() {
      chat.getChatStatus(function (status) {
        console.log(status);
        document.getElementById('activeDiv').innerText = status.active;
      })
    }

    function getIsSupportedBrowser() {
      chat.getIsSupportedBrowser(function (result) {
        console.log(result);
        document.getElementById('browserSupportDiv').innerText = result.supported;
      })
    }

    $(document).ready(function () {
      if (quiqOptions.autoPopTime) {
        var time = quiqOptions.autoPopTime;
        var interval = setInterval(function () {
          time -= 100;
          if (time <= 0) {
            clearInterval(interval);
          }
          $('#autoPopTime').text('Auto Pop Time:' + time + 'ms');
        }, 100);
      } else {
        $('#autoPopTime').remove();
      }
    });
  </script>
</head>

<body>
  <h1>Webchat Playground</h1>

  <div class="container theme-showcase" role="main">
    <div class="row">
      <div class="col-xs-6">
        <!-- Event handling -->
        <div class="page-header">
          <h1>Event handling</h1>
        </div>
        <p>
          The state below is kept up-to-date by registering and listening to events with the SDK.
        </p>
        <table id="stateTable" class="table">
          <thead>
            <tr>
              <th>Property</th>
              <th>Value</th>
            </tr>
          </thead>
          <tbody>
          </tbody>
        </table>

        <!-- SDK methods -->
        <div class="page-header">
          <h1>Exposed methods</h1>
        </div>
        <p>
          These buttons call into the SDK to interact with webchat.
        </p>
        <div class="row">
          <p>
            <button type="button" id="action_showChat" class="btn btn-lg btn-success" onclick="toggleChatVisibility(true)">
              Show chat
            </button>
          </p>
          <p>
            <button type="button" id="action_hideChat" class="btn btn-lg btn-success" onclick="toggleChatVisibility(false)">
              Hide chat
            </button>
          </p>
          <p>
            Field Id
            <input type="text" id="field_id" />
          </p>
          <p>
            Field Value
            <input type="text" id="field_value" />
          </p>
          <p>
            <button type="button" id="action_hideChat" class="btn btn-lg btn-success" onclick="setChatRegistrationField()">
              Set Registration Field
            </button>
          </p>
          <p>
            <button type="button" id="action_getAgentAvailability" class="btn btn-lg btn-success" onclick="getAgentAvailability()">
              Get Agent Availability
            </button>
            <div id="agentAvailabilityDiv"></div>
          </p>
          <p>
            <button type="button" id="action_getHandle" class="btn btn-lg btn-success" onclick="getHandle()">
              Get Handle
            </button>
            <div id="handleDiv"></div>
          </p>
          <p>
            <button type="button" id="action_getChatStatus" class="btn btn-lg btn-success" onclick="getChatStatus()">
              Get Chat Status (Active)
            </button>
            <div id="activeDiv"></div>
          </p>
          <p>
            <button type="button" id="action_getIsSupportedBrowser" class="btn btn-lg btn-success" onclick="getIsSupportedBrowser()">
              Is Browser Supported?
            </button>
            <div id="browserSupportDiv"></div>
          </p>
        </div>

        <!-- Custom launch buttons -->
        <div class="page-header">
          <h1>Custom launch buttons</h1>
        </div>
        <p>
          These buttons are managed by the SDK. They will appear ghosted when no agents are available. They will toggle chat visibility
          when clicked.
        </p>
        <p>
          <button type="button" id="customLaunchBtn1" class="btn btn-lg btn-primary">Launch chat</button>
          <button type="button" id="customLaunchBtn2" class="btn btn-lg btn-primary">Chat with us</button>
        </p>

        <!-- Auto Pop Time -->
        <h1 id="autoPopTime" class="page-header">Auto Pop Time</h1>
      </div>
    </div>
  </div>
</body>

</html>