// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`MessageForm component IE10 uses an Input 1`] = `
<div
  className="MessageForm"
  style={
    Object {
      "boxShadow": "0 1px 2px 0 rgba(0, 0, 0, 0.2)",
      "zIndex": 1,
    }
  }
>
  <div
    className="messageArea"
  >
    <form
      className="Form"
      onSubmit={[Function]}
    >
      <Input
        autoFocus={true}
        disabled={true}
        inputStyle={
          Object {
            "color": "#68b588",
            "fontFamily": "Source Sans Pro",
          }
        }
        maxLength={1024}
        onBlur={[Function]}
        onChange={[Function]}
        onFocus={[Function]}
        onSubmit={[Function]}
        placeholder="No agents are currently available."
        value=""
      />
    </form>
    <button
      className="messageFormBtn attachmentBtn"
      disabled={true}
      onClick={[Function]}
      style={
        Object {
          "color": "#848484",
          "fontSize": "16px",
        }
      }
      title="Send file"
    >
      <i
        className="fa fa-paperclip"
      />
    </button>
    <button
      className="messageFormBtn emojiBtn"
      disabled={true}
      onClick={[Function]}
      style={
        Object {
          "color": "#848484",
          "fontSize": "16px",
        }
      }
      title="Emoji picker"
    >
      <i
        className="fa fa-smile-o"
      />
    </button>
    <MenuButton
      buttonStyles={
        Object {
          "background": "red",
          "borderRight": "2px solid rgb(244, 244, 248)",
        }
      }
      className=""
      closeOnChildClick={true}
      icon="bars"
      iconStyles={
        Object {
          "color": "#848484",
          "display": "none",
          "fontSize": "19px",
          "marginTop": "1px",
        }
      }
      keepChildrenMounted={false}
      menuPosition="top-right"
      offset={
        Object {
          "horizontal": "-115px",
          "vertical": "40px",
        }
      }
      title="Options"
    >
      <Menu
        containerStyle={
          Object {
            "fontFamily": "Lato, sans-serif",
            "zIndex": 1000,
          }
        }
        items={
          Array [
            Object {
              "icon": Object {
                "name": "Python",
                "style": Object {
                  "color": "#2199e8",
                },
              },
              "id": "Spidey",
              "label": "Babel",
              "onClick": [Function],
              "style": Object {
                "color": "#2199e8",
                "fontFamily": "Lato, sans-serif",
                "zIndex": 1000,
              },
              "title": "Danny McBridal",
            },
            Object {
              "disabled": false,
              "icon": Object {
                "name": "volume-off",
                "style": Object {
                  "color": "#2199e8",
                },
              },
              "id": "muteSounds",
              "label": "Mute Sounds",
              "onClick": [Function],
              "style": Object {
                "color": "#2199e8",
                "fontFamily": "Lato, sans-serif",
                "zIndex": 1000,
              },
              "title": "Mute new message sounds",
            },
            Object {
              "disabled": false,
              "icon": Object {
                "name": "envelope",
                "style": Object {
                  "color": "#2199e8",
                },
              },
              "id": "emailTranscript",
              "label": "Email Transcript",
              "onClick": [Function],
              "style": Object {
                "color": "#2199e8",
                "fontFamily": "Lato, sans-serif",
                "zIndex": 1000,
              },
              "title": "Email a full transcript of the current chat",
            },
          ]
        }
      />
    </MenuButton>
    <Connect(EmojiPicker)
      addEmoji={[Function]}
      emojiFilter={[Function]}
      ignoreOutsideClickOnSelectors={
        Array [
          ".emojiBtn",
        ]
      }
      onOutsideClick={[Function]}
      visible={false}
    />
  </div>
</div>
`;

exports[`MessageForm component rendering renders 1`] = `
<div
  className="MessageForm"
  style={
    Object {
      "boxShadow": "0 1px 2px 0 rgba(0, 0, 0, 0.2)",
      "zIndex": 1,
    }
  }
>
  <div
    className="messageArea"
  >
    <Connect(EmojiTextArea)
      disabled={true}
      maxLength={1024}
      name="message"
      onBlur={[Function]}
      onChange={[Function]}
      onFocus={[Function]}
      onIMEModeEntered={[Function]}
      onReturn={[Function]}
      placeholder="No agents are currently available."
      style={
        Object {
          "color": "#68b588",
          "fontFamily": "Source Sans Pro",
        }
      }
    />
    <button
      className="messageFormBtn attachmentBtn"
      disabled={true}
      onClick={[Function]}
      style={
        Object {
          "color": "#848484",
          "fontSize": "16px",
        }
      }
      title="Send file"
    >
      <i
        className="fa fa-paperclip"
      />
    </button>
    <button
      className="messageFormBtn emojiBtn"
      disabled={true}
      onClick={[Function]}
      style={
        Object {
          "color": "#848484",
          "fontSize": "16px",
        }
      }
      title="Emoji picker"
    >
      <i
        className="fa fa-smile-o"
      />
    </button>
    <MenuButton
      buttonStyles={
        Object {
          "background": "red",
          "borderRight": "2px solid rgb(244, 244, 248)",
        }
      }
      className=""
      closeOnChildClick={true}
      icon="bars"
      iconStyles={
        Object {
          "color": "#848484",
          "display": "none",
          "fontSize": "19px",
          "marginTop": "1px",
        }
      }
      keepChildrenMounted={false}
      menuPosition="top-right"
      offset={
        Object {
          "horizontal": "-115px",
          "vertical": "40px",
        }
      }
      title="Options"
    >
      <Menu
        containerStyle={
          Object {
            "fontFamily": "Lato, sans-serif",
            "zIndex": 1000,
          }
        }
        items={
          Array [
            Object {
              "icon": Object {
                "name": "Python",
                "style": Object {
                  "color": "#2199e8",
                },
              },
              "id": "Spidey",
              "label": "Babel",
              "onClick": [Function],
              "style": Object {
                "color": "#2199e8",
                "fontFamily": "Lato, sans-serif",
                "zIndex": 1000,
              },
              "title": "Danny McBridal",
            },
            Object {
              "disabled": false,
              "icon": Object {
                "name": "volume-off",
                "style": Object {
                  "color": "#2199e8",
                },
              },
              "id": "muteSounds",
              "label": "Mute Sounds",
              "onClick": [Function],
              "style": Object {
                "color": "#2199e8",
                "fontFamily": "Lato, sans-serif",
                "zIndex": 1000,
              },
              "title": "Mute new message sounds",
            },
            Object {
              "disabled": false,
              "icon": Object {
                "name": "envelope",
                "style": Object {
                  "color": "#2199e8",
                },
              },
              "id": "emailTranscript",
              "label": "Email Transcript",
              "onClick": [Function],
              "style": Object {
                "color": "#2199e8",
                "fontFamily": "Lato, sans-serif",
                "zIndex": 1000,
              },
              "title": "Email a full transcript of the current chat",
            },
          ]
        }
      />
    </MenuButton>
    <Connect(EmojiPicker)
      addEmoji={[Function]}
      emojiFilter={[Function]}
      ignoreOutsideClickOnSelectors={
        Array [
          ".emojiBtn",
        ]
      }
      onOutsideClick={[Function]}
      visible={false}
    />
  </div>
</div>
`;
